PROGRAM 4: ReverseIt.c
----------------------

The goal of this project is to introduce you to the concepts of file I/O in
UNIX. In this project you will implement a program that reads in the
content of one file and outputs the content in reverse to another file.
The program must run on atlas.


PROBLEM DESCRIPTION:
-------------------

Write a program that creates a copy of a binary file with its contents written
in reverse, that is with the bytes in reverse order. Consider your design
carefully to find a reasonably efficient way to solve this problem. (This
will be a factor in grading this program.) One inefficient solution is
to read one byte at a time from the end of the file forward. 


INPUT/COMMAND LINE:
------------------

Your program should take two command line parameters, where each parameter
is the name of a file. The first parameter is the name of the input file
and the second parameter is the name of the output file.

Example Command Line:

  {odin} ReverseIt fileToReverse fileInReverse


REQUIREMENTS:
------------

  o All file I/O must be done using the routines described in chapter 1-3
    of the text.

  o The programs should be robust and include appropriate error checks.

  o You must submit at least the following files (i.e., all the files
    necessary to compile your program):

        README.txt
        ReverseIt.cpp (or .c file)
        Makefile

 To submit the files, you will need to use the submit program.  Your files
 need to be under a common subdirectory called "1730_program4".

 Execute the below command line while in your home directory:
   submit 1730_program4 cs1730

 NOTE: you need to be LOGGED ONTO odin when you execute the submit command.

