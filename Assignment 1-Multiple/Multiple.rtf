{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 /* Program Name: Multiple\
   Author: Kristin Ottofy\
   Date: June 14, 2010 */\
\
#include <stdio.h>\
#include <stdlib.h>\
#include <unistd.h>\
\
int main(int argc, char* argv[])\
\{\
  int int1, int2;	//the parameters will be assigned to int1 and int2 using atoi\
  int i;		//i is used in the for statements to determine if integer\
  int switchint = 2;    //switchint is used in the switch statement to determine if multiple\
\
/* This if statement determines that the user has entered 2 parameters, \
or the user will receive an error message and the program terminates */\
  if (argc != 3)\
    \{\
     	printf("Sorry. You need two parameters.\\n"); \
	exit(1);\
    \}\
\
/* The following 2 for statements go through each parameter and check to\
make sure the user has entered integers, or the user will receive an error\
message and the program will terminate. The for statements also allow for \
the first character in the parameters to be a negative sign.  */\
  for (i=0;argv[1][i]!=0;i++)\
    \{\
      if (argv[1][i] < 48 || argv[1][i] > 57)\
	\{\
	  if (argv[1][0] == 45  && argv[1][1] != 0 && i == 0)\
	       continue;\
	   else\
	    \{\
	      printf("Sorry. You have not entered an integer.\\n");\
	      exit(1);\
	    \}\
	\}\
    \}\
\
  for (i=0;argv[2][i]!=0;i++)\
    \{\
      if (argv[2][i] < 48 || argv[2][i] > 57)\
        \{\
	  if (argv[2][0] == 45 && argv[2][1] != 0 && i == 0)\
            continue;\
	  else\
            \{\
              printf("Sorry. You have not entered an integer.\\n");\
              exit(1);\
            \}\
        \}\
    \}\
\
 // the parameters are assigned to integers int1 and int2\
  int1 = atoi(argv[1]);\
  int2 = atoi(argv[2]); \
\
/* The following if/else if/else statements will assign a value of 1 to\
switchint after determining if the first parameter is a multiple of\
the second, otherwise switchint will be assigned a value of 2. \
0 is a multiple of everything like 12 is a multiple of 3. */\
  if (int2 == int1) //mostly to test for 0 and 0, multiples\
    switchint = 1;\
  else if (int1 == 0 && int2 != 0) //if int1 is 0 and int2 is not 0, multiples\
    switchint = 1;\
  else if (int2 == 0 && int1 != 0) //if int1 is not 0 and int2 is 0, NOT multiples\
    switchint = 2;\
  else if (int1 % int2 == 0) //tests for if modulus = 0, multiples\
    switchint = 1;\
  else\
    switchint = 2;\
\
/* After switchint has been assigned a value, the switch statement will\
print whether the first parameter is a multiple of the second parameter.  */\
  switch(switchint)\
    \{\
    case 1:\
      printf("%s is a multiple of %s.\\n", argv[1], argv[2]);\
      break;\
    case 2:\
      printf("%s is not a multiple of %s.\\n", argv[1], argv[2]);    \
      break;    \
    \}       \
\
     	/* If the program is a success, print the parameters and exit. */\
	printf("Parameter 1 is %s.\\n", argv[1]);\
	printf("Parameter 2 is %s.\\n", argv[2]); \
	exit(0);\
\}}